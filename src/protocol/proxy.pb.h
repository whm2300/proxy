// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proxy.proto

#ifndef PROTOBUF_proxy_2eproto__INCLUDED
#define PROTOBUF_proxy_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_proxy_2eproto();
void protobuf_AssignDesc_proxy_2eproto();
void protobuf_ShutdownFile_proxy_2eproto();

class NewConnection;

// ===================================================================

class NewConnection : public ::google::protobuf::Message {
 public:
  NewConnection();
  virtual ~NewConnection();

  NewConnection(const NewConnection& from);

  inline NewConnection& operator=(const NewConnection& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewConnection& default_instance();

  void Swap(NewConnection* other);

  // implements Message ----------------------------------------------

  NewConnection* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NewConnection& from);
  void MergeFrom(const NewConnection& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 token = 1;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 1;
  inline ::google::protobuf::int32 token() const;
  inline void set_token(::google::protobuf::int32 value);

  // required int32 from_port = 2;
  inline bool has_from_port() const;
  inline void clear_from_port();
  static const int kFromPortFieldNumber = 2;
  inline ::google::protobuf::int32 from_port() const;
  inline void set_from_port(::google::protobuf::int32 value);

  // required int32 to_prot = 3;
  inline bool has_to_prot() const;
  inline void clear_to_prot();
  static const int kToProtFieldNumber = 3;
  inline ::google::protobuf::int32 to_prot() const;
  inline void set_to_prot(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NewConnection)
 private:
  inline void set_has_token();
  inline void clear_has_token();
  inline void set_has_from_port();
  inline void clear_has_from_port();
  inline void set_has_to_prot();
  inline void clear_has_to_prot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 token_;
  ::google::protobuf::int32 from_port_;
  ::google::protobuf::int32 to_prot_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_proxy_2eproto();
  friend void protobuf_AssignDesc_proxy_2eproto();
  friend void protobuf_ShutdownFile_proxy_2eproto();

  void InitAsDefaultInstance();
  static NewConnection* default_instance_;
};
// ===================================================================


// ===================================================================

// NewConnection

// required int32 token = 1;
inline bool NewConnection::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewConnection::set_has_token() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewConnection::clear_has_token() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewConnection::clear_token() {
  token_ = 0;
  clear_has_token();
}
inline ::google::protobuf::int32 NewConnection::token() const {
  return token_;
}
inline void NewConnection::set_token(::google::protobuf::int32 value) {
  set_has_token();
  token_ = value;
}

// required int32 from_port = 2;
inline bool NewConnection::has_from_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NewConnection::set_has_from_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NewConnection::clear_has_from_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NewConnection::clear_from_port() {
  from_port_ = 0;
  clear_has_from_port();
}
inline ::google::protobuf::int32 NewConnection::from_port() const {
  return from_port_;
}
inline void NewConnection::set_from_port(::google::protobuf::int32 value) {
  set_has_from_port();
  from_port_ = value;
}

// required int32 to_prot = 3;
inline bool NewConnection::has_to_prot() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NewConnection::set_has_to_prot() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NewConnection::clear_has_to_prot() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NewConnection::clear_to_prot() {
  to_prot_ = 0;
  clear_has_to_prot();
}
inline ::google::protobuf::int32 NewConnection::to_prot() const {
  return to_prot_;
}
inline void NewConnection::set_to_prot(::google::protobuf::int32 value) {
  set_has_to_prot();
  to_prot_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proxy_2eproto__INCLUDED
